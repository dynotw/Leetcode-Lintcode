533. Two Sum - Closest to target

Given an array nums of n integers, find two integers in nums such that the sum is closest to a given number, target.

Return the absolute value of difference between the sum of the two integers and the target.

Example
Example1

Input:  nums = [-1, 2, 1, -4] and target = 4
Output: 1
Explanation:
The minimum difference is 1. (4 - (2 + 1) = 1).
Example2

Input:  nums = [-1, -1, -1, -4] and target = 4
Output: 6
Explanation:
The minimum difference is 6. (4 - (- 1 - 1) = 6).
Challenge
Do it in O(nlogn) time complexity.


//
public class Solution {
    /**
     * @param nums: an integer array
     * @param target: An integer
     * @return: the difference between the sum and the target
     */
    public int twoSumClosest(int[] nums, int target) {
        // write your code here
        int diff = Integer.MAX_VALUE;
        
        // sort array firstly, O(nlogn)
        Arrays.sort(nums);
        
        // set two pointers
        int left = 0;
        int right = nums.length - 1;
        
        while(left < right){
            if(nums[left] + nums[right] == target){
                return 0;
            }
            else if(nums[left]+ nums[right] < target){
                diff = Math.min(diff, Math.abs(nums[left] + nums[right]-target));
                left += 1;
            }
            else{
                diff = Math.min(diff, Math.abs(nums[left] + nums[right]-target));
                right -= 1;
            }
            System.out.println("diff is " + diff);
        }
        
        return diff;
    }
}
