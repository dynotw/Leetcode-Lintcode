503. Next Greater Element II

Given a circular array (the next element of the last element is the first element of the array), print the Next Greater Number for every element. 
The Next Greater Number of a number x is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn't exist, output -1 for this number.

Example 1:
Input: [1,2,1]
Output: [2,-1,2]
Explanation: The first 1's next greater number is 2; 
The number 2 can't find next greater number; 
The second 1's next greater number needs to search circularly, which is also 2.
Note: The length of given array won't exceed 10000.





# Time complexity: O(n^2); Space complexity: O(n)
class Solution:
    def nextGreaterElements_1(self, nums: List[int]) -> List[int]:
    
        length = len(nums)
        result = [-1] * length
        
        for i in range(length):
            index = i+1
            # i = 0 is an exception, we can't use the following while loop
            if i == 0:
                while(index < length):
                    if nums[index] > nums[i]:
                        result[i] = nums[index]
                        break

                    else:
                        index += 1
            
            # i != 0
            else:            
                while(index != i):
                    if index == length:
                        index = 0

                    if nums[index] > nums[i]:
                        result[i] = nums[index]
                        break

                    else:
                        index += 1
                
        return result

# Time complexity: O(n); Space Complexity: O(n)
    def nextGreaterElements(self, nums: List[int]) -> List[int]:
        n = len(nums)
        stack = list()
        
        # from right to left, put all indexes into stack
        for i in range(n-1,-1,-1):
            stack.append(i)
        
        
        result = [-1] * n
        # 1. nums[i] < nums[i+1] -> find greater
        # 2. nums[i] >= nums[i+1], then compare nums[i] & greater of nums[i+1], .......
        # Firstly, find greater of the most right element, then compare nums[-2] & nums[-1], which is stack.append(i) in while loop
        # stack.append(i) represents nums[i+1], stack[-2] is greater of nums[i+1]
        for i in range(n-1,-1,-1):
            while(stack and nums[stack[-1]] <= nums[i]):
                stack.pop()
                
            if stack:
                result[i] = nums[stack[-1]]
            
            stack.append(i)
        
        return result
