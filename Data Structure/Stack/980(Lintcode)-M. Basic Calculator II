980. Basic Calculator II

Implement a basic calculator to evaluate a simple expression string.

The expression string contains only non-negative integers, +, -, *, / operators and empty spaces . The integer division should truncate toward zero.

You may assume that the given expression is always valid.

Example
Example 1:

Input:
"3+2*2"
Output:
7
Example 2:

Input:
" 3/2 "
Output:
1
Notice
Do not use the eval built-in library function.

// Stack
public class Solution {
    /**
     * @param s: the given expression
     * @return: the result of expression
     */
    public int calculate(String s) {
        // Write your code here
        
        // Eliminate special cases
        if (s == null || s.length() == 0){
            return 0;
        }
        
        Stack<Integer> visited = new Stack<>();
        int Num = 0;
        // assume the first number sign is '+', in order to put 1st number into stack
        char sign = '+';
        
        for (int i=0; i < s.length(); i++){
            char element = s.charAt(i);
            
            // whether it's digit
            if (Character.isDigit(element)){
                Num = Num * 10 + element - '0';
            }
            
            // the last number is specail, so including i == s.length() - 1
            if (element == '+' || element =='-' || element == '*' || element == '/' || i == s.length() -1){
                if (sign == '+'){
                    visited.push(Num);
                }
                
                else if (sign == '-'){
                    visited.push(-Num);
                }
                
                else if (sign == '*'){
                    visited.push(visited.pop() * Num);
                }
                
                else if (sign == '/'){
                    visited.push(visited.pop() / Num);
                }
                
                Num = 0;
                sign = element;
            }
        }
        
        int result = 0;
        for (int i : visited){
            result += i;
        }
        return result;
    }
}
