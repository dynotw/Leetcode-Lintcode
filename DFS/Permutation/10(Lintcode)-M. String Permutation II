10. String Permutation II

Given a string, find all permutations of it without duplicates.

Example
Example 1:

Input: "abb"
Output:
["abb", "bab", "bba"]
Example 2:

Input: "aabb"
Output:
["aabb", "abab", "baba", "bbaa", "abba", "baab"]





class Solution:
    """
    @param str: A string
    @return: all permutations
    """
    def stringPermutation2(self, str):
        # write your code here
        str = sorted(str)
        temp = ""
        result = list()
        self.dfs(str, temp,  result)
        return result
    
    
    def dfs(self, s, temp, result):
        if (len(s) == 0):
            # if statement 的 in 判断是O(n)，所以加上this if statement, time exceed
            '''
            if(temp not in result):
                result.append(temp)
                return
            '''
            
            result.append(temp)
            return
        
        for i in range(len(s)):
            element = s[i]
            if(element in s[:i]):
                continue
            else:
                temp = temp + element
                nextStr = s[:i] + s[i+1:]
                self.dfs(nextStr, temp, result)
                temp = temp[:-1]
