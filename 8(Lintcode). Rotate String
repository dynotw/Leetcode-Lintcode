8. Rotate String

Given a string(Given in the way of char array) and an offset, rotate the string by offset in place. (rotate from left to right).

Example
Example 1:

Input: str="abcdefg", offset = 3
Output: str = "efgabcd"	
Explanation: Note that it is rotated in place, that is, after str is rotated, it becomes "efgabcd".
Example 2:

Input: str="abcdefg", offset = 0
Output: str = "abcdefg"	
Explanation: Note that it is rotated in place, that is, after str is rotated, it becomes "abcdefg".
Example 3:

Input: str="abcdefg", offset = 1
Output: str = "gabcdef"	
Explanation: Note that it is rotated in place, that is, after str is rotated, it becomes "gabcdef".
Example 4:

Input: str="abcdefg", offset =2
Output: str = "fgabcde"	
Explanation: Note that it is rotated in place, that is, after str is rotated, it becomes "fgabcde".
Example 5:

Input: str="abcdefg", offset = 10
Output: str = "efgabcd"	
Explanation: Note that it is rotated in place, that is, after str is rotated, it becomes "efgabcd".
Challenge
Rotate in-place with O(1) extra memory.

Clarification
in place means you should change string s in the function. You don't return anything.

Notice
offset >= 0
the length of str >= 0
Make changes on the original input data




// this kind of problem, we call ‘三步反转’. (define a function named reverse）

public class Solution {
    /**
     * @param str: An array of char
     * @param offset: An integer
     * @return: nothing
     */
    public void rotateString(char[] str, int offset) {
        // write your code here
        
        if (str == null || str.length == 0){
            return;
        }
        
        else{
            // because the value of offset may be greater than str.length, we need to deal with offset
            offset = offset % str.length;
            reverse(str, 0, str.length - offset -1);
            reverse(str, str.length -offset, str.length -1);
            reverse(str, 0, str.length-1);
        }
        
        
    }
    
    // because it's arry, 是引用传递，不是值传递。所以互换元素后，char[] str中的元素真的交换了
    public void reverse(char[] str, int startIndex, int endIndex){
        for (int i =startIndex, j = endIndex; i < j; i++, j-- ){
            char temp = str[i];
            str[i] = str[j];
            str[j] = temp;
        }
    }
}

