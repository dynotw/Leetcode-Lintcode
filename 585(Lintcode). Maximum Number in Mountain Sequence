585. Maximum Number in Mountain Sequence

Given a mountain sequence of n integers which increase firstly and then decrease, find the mountain top.

Example
Example 1:

Input: nums = [1, 2, 4, 8, 6, 3] 
Output: 8
Example 2:

Input: nums = [10, 9, 8, 7], 
Output: 10
Notice
Arrays are strictly incremented, strictly decreasing



// 类比75(Lintcode). Find Peak Element. this problem can use binary search(it's a little to understand)
public class Solution {
    /**
     * @param nums: a mountain sequence which increase firstly and then decrease
     * @return: then mountain top
     */
    public int mountainSequence(int[] nums) {
        // write your code here
        
        if (nums == null || nums.length == 0){
            return -1;
        }
        
        if (nums.length == 1){
            return nums[0];
        }
        
        int left = 0;
        
        // the mountain is the biggest element, so the left side elements must be increasing
        while (nums[left] < nums[left+1]){
            left+=1;
        }
        
        return nums[left];
    }
}
