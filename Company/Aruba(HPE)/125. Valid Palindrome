# Set two pointers
# Time complexity: O(n); Space Complexity: O(1)
class Solution:
    def isPalindrome(self, s: str) -> bool:
        # eliminate corner condition
        if len(s) == 1:
            return True
        
        # set two pointers
        left = 0
        right = len(s)-1
        
        while(left < right):
            while(not s[left].isalnum() and left < right):
                left += 1
            while(not s[right].isalnum() and right > left):
                right -= 1
            
            if s[left].lower() == s[right].lower():
                left += 1
                right -= 1
            
            else:
                return False
        
        if left == right or left > right:
            return True
        
        else:
            return False
