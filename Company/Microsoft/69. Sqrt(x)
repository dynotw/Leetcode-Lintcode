Example 1:
Input: x = 4
Output: 2

Example 2:
Input: x = 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since the decimal part is truncated, 2 is returned.


# use binary search
# time complexity: O(logn); space complexity: O(1)
class Solution:
    def mySqrt(self, x: int) -> int:
        # eliminate corner condition
        if(x == 0):
            return 0
        if(1<=x<=3):
            return 1
        if(x == 4):
            return 2
        
        # binary search
        left = 2
        right = x//2
        
        while(left + 1 < right):
            mid = left + (right - left)//2
            
            if( mid*mid-x > 0):
                right = mid
            elif(mid * mid - x == 0):
                return mid
            else:
                left = mid
        
        return left
