348. Design Tic-Tac-Toe. (像五子棋，只不过变成 N子棋)
Medium

Assume the following rules are for the tic-tac-toe game on an n x n board between two players:

A move is guaranteed to be valid and is placed on an empty block.
Once a winning condition is reached, no more moves are allowed.
A player who succeeds in placing n of their marks in a horizontal, vertical, or diagonal row wins the game.
Implement the TicTacToe class:

TicTacToe(int n) Initializes the object the size of the board n.
int move(int row, int col, int player) Indicates that the player with id player plays at the cell (row, col) of the board. 
The move is guaranteed to be a valid move.
 

Example 1:
Input
["TicTacToe", "move", "move", "move", "move", "move", "move", "move"]
[[3], [0, 0, 1], [0, 2, 2], [2, 2, 1], [1, 1, 2], [2, 0, 1], [1, 0, 2], [2, 1, 1]]
Output
[null, 0, 0, 0, 0, 0, 0, 1]



class TicTacToe:
    def __init__(self, n: int):
        self.board = [[0] * n for i in range(n)]

    def move(self, row: int, col: int, player: int) -> int:
        n = len(self.board)
        self.board[row][col] = player
        win = 0
        # check win hor
        count = 0
        for i in range(n):
            if self.board[row][i] == player:
                count += 1
                if count == n:
                    win = player
            else:
                break
        
        # check win ver
        count = 0
        for i in range(n):
            if self.board[i][col] == player:
                count += 1
                if count == n:
                    win = player
            else:
                break
            
        # check win dia_1
        count = 0
        for i in range(n):
            if self.board[i][i] == player:
                count += 1
                if count == n:
                    win = player
            else:
                break
        
        # check win dia_2
        count = 0
        for i in range(n):
            if self.board[i][n-i-1] == player:
                count += 1
                if count == n:
                    win = player
            else:
                break
        
        return win
                    


# Your TicTacToe object will be instantiated and called as such:
# obj = TicTacToe(n)
# param_1 = obj.move(row,col,player)
