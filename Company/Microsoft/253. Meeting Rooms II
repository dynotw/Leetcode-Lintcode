253. Meeting Rooms II
Medium

Given an array of meeting time intervals intervals where intervals[i] = [starti, endi], return the minimum number of conference rooms required.


Example 1:
Input: intervals = [[0,30],[5,10],[15,20]]
Output: 2

Example 2:
Input: intervals = [[7,10],[2,4]]
Output: 1



# Time complexity: O(nlogn); Space Compelxity: O(n)
import heapq
class Solution:
    def minMeetingRooms(self, intervals: List[List[int]]) -> int:
        # eliminate corner case
        if len(intervals) == 0 or intervals == None:
            return 0
        if len(intervals) == 1:
            return 1
        
        # sort
        intervals.sort(key = lambda x: x[0])
        # print(intervals)
        
        # use priority queue to check start time and end time
        pq = list()
        heapq.heappush(pq, intervals[0][1])
        
        for i in range(1, len(intervals)):
            if intervals[i][0] >= pq[0]:
                heapq.heappop(pq)
            
            heapq.heappush(pq, intervals[i][1])
            
        return len(pq)
