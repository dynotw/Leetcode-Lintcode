88. Merge Sorted Array
Easy

Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.

The number of elements initialized in nums1 and nums2 are m and n respectively. You may assume that nums1 has a size equal to m + n such that it has enough space to hold additional elements from nums2.

 
Example 1:
Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
Output: [1,2,2,3,5,6]

Example 2:
Input: nums1 = [1], m = 1, nums2 = [], n = 0
Output: [1]



class Solution:
    # Time complexity: O(2n+2m); Space complexity: O(n+m)
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        """
        Do not return anything, modify nums1 in-place instead.
        """
        pointer_1 = 0
        pointer_2 = 0
        temp = []
        
        while(pointer_1 < m and pointer_2 < n):
            temp1 = nums1[pointer_1]
            temp2 = nums2[pointer_2]
            
            if(temp1 <= temp2):
                temp.append(temp1)
                pointer_1 += 1
            
            else:
                temp.append(temp2)
                pointer_2 +=1
        
        while pointer_1 < m:
            temp.append(nums1[pointer_1])
            pointer_1 += 1
        
        while pointer_2 < n:
            temp.append(nums2[pointer_2])
            pointer_2 += 1
        
        for i in range(m+n):
            nums1[i] = temp[i]
