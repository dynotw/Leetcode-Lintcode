78. Subsets
Medium

Given an integer array nums of unique elements, return all possible subsets (the power set).

The solution set must not contain duplicate subsets. Return the solution in any order.

Example 1:
Input: nums = [1,2,3]
Output: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]

Example 2:
Input: nums = [0]
Output: [[],[0]]



# Classical DFS
class Solution:
    def subsets(self, nums: List[int]) -> List[List[int]]:
        current = []
        result = []
        self.dfs(current, result, nums, 0)
        
        return result
    
    def dfs(self, current, result, nums, index):
        result.append(current[:])
        
        for i in range(index, len(nums)):
            current.append(nums[i])
            self.dfs(current, result, nums, i+1)
            current.pop()
        
        return 
