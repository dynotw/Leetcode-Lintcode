20. Valid Parentheses
Easy

Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 

Example 1:
Input: s = "()"
Output: true

Example 2:
Input: s = "()[]{}"
Output: true

Example 3:
Input: s = "(]"
Output: false

Example 4:
Input: s = "([)]"
Output: false

Example 5:
Input: s = "{[]}"
Output: true




# time: O(n), space: O(n)
class Solution:
    def isValid(self, s: str) -> bool:
        temp = list()
        for i in range(len(s)):
            if(s[i] in ["(" ,"{", "["]):
                temp.append(s[i])
            
            elif(s[i] == ")"):
                if(len(temp) == 0):
                    return False
                last = temp.pop()
                if(last == "("):
                    continue
                else:
                    return False
                
            elif(s[i] == "}"):
                if(len(temp) == 0):
                    return False
                last = temp.pop()
                if(last == "{"):
                    continue
                else:
                    return False 
            else:
                if(len(temp) == 0):
                    return False
                last = temp.pop()
                if(last == "["):
                    continue
                else:
                    return False 
        return len(temp) == 0
