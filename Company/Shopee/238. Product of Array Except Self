238. Product of Array Except Self
Medium

Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].
The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.
You must write an algorithm that runs in O(n) time and without using the division operation.

 
Example 1:
Input: nums = [1,2,3,4]
Output: [24,12,8,6]

Example 2:
Input: nums = [-1,1,0,-3,3]
Output: [0,0,9,0,0]




class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        start = 1
        zeros = list()
        for i in range(len(nums)):
            if nums[i] == 0:
                zeros.append(i)
                continue
            start = start*nums[i]
        
        result = list()
        # all num are zero or more than two zeroes
        if(len(zeros) == len(nums) or len(zeros) > 1):
            return [0] * len(nums)
        
        # has one zero
        if(len(zeros) == 1):        
            for i in range(len(nums)):
                if(i in zeros):
                    result.append(start)
                    continue
                result.append(0)
        
        # no zero
        else:
             for i in range(len(nums)):
                result.append(int(start/nums[i]))           
        
        return result
        
        
        
