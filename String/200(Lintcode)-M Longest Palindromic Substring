200. Longest Palindromic Substring

Given a string S, find the longest palindromic substring in S. You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.

Example
Example 1:

Input:"abcdzdcab"
Output:"cdzdc"
Example 2:

Input:"aba"
Output:"aba"
Challenge
O(n2) time is acceptable. Can you do it in O(n) time.


// This method is bad, O(n^2)

// pay attention to "ba", "b" theses edge condition
public class Solution {
    /**
     * @param s: input string
     * @return: a string as the longest palindromic substring
     */
    public String longestPalindrome(String s) {
        // write your code here
        int max = -1;
        int start = 0;
        int end = s.length() - 1;
        
        
        for (int left = 0; left < s.length(); left++){
            for (int right = s.length() - 1; right - left > max; right--){
                int diff = 0;
                
                if (isPalindromic(s,left,right)){
                    diff = right - left;
                    
                    if (diff > max){
                        max = diff;
                        start = left;
                        end= right;
                    }
                }
                
            }
        }
        
        String str = s.substring(start, end + 1);
        
        return str;
    }
    
    private boolean isPalindromic(String s, int pointer1, int pointer2){
        
        int left = pointer1;
        int right = pointer2;
        
        if (left > right){
            return false;
        }
        
        while (left < right){
            
            if (s.charAt(left) != s.charAt(right)){
                return false;
            }
            
            left ++;
            right --;
            
        }
        
        return true;
    } 
}
