1790. Rotate String II

Given a string(Given in the way of char array), a right offset and a left offset, rotate the string by offset in place.(left offest represents the offset of a string to the left,right offest represents the offset of a string to the right,the total offset is calculated from the left offset and the right offset,split two strings at the total offset and swap positions)。

Example
Example 1:

Input：str ="abcdefg", left = 3, right = 1
Output："cdefgab"
Explanation：The left offset is 3, the right offset is 1, and the total offset is left 2. Therefore, the original string moves to the left and becomes "cdefg"+ "ab".
Example 2:

Input：str="abcdefg", left = 0, right = 0
Output："abcdefg"
Explanation：The left offset is 0, the right offset is 0, and the total offset is 0. So the string remains unchanged.
Example 3:

Input：str = "abcdefg",left = 1, right = 2
Output："gabcdef"
Explanation：The left offset is 1, the right offset is 2, and the total offset is right 1. Therefore, the original string moves to the left and becomes "g" + "abcdef".



// Java Method
public class Solution {
    /**
     * @param str: A String
     * @param left: a left offset
     * @param right: a right offset
     * @return: return a rotate string
     */
    public String RotateString2(String str, int left, int right) {
        // write your code here
        
        if (left == right){
            return str;
        }
        
        else if(left > right){
            int dif = (left -right)%str.length();
            
            String part1 = str.substring(0, dif);
            
            String part2 = str.substring(dif, str.length());
            
            String result = part2 + part1;
            
            return result;
        }
        
        else{
            int dif = (right - left) % str.length();
            
            String part1 = str.substring(0, str.length()-dif);
            
            String part2 = str.substring(str.length() - dif, str.length());
            
            String result = part2 + part1;
            
            return result;
        }
    }
}



// Python
class Solution:
    """
    @param str: A String
    @param left: a left offset
    @param right: a right offset
    @return: return a rotate string
    """
    def RotateString2(self, str, left, right):
        # write your code here
        
        length = len(str)
        
        if left == right:
            return str
        
        elif left > right:
            dif = (left - right)%length
            part1 = str[0:dif]
            part2 = str[dif:]
            
            return part2+part1
        
        else:
            dif = (right - left)%length
            part1 = str[:length-dif]
            part2 = str[length-dif:]
            
            return part2+part1
